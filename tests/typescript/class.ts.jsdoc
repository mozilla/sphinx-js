[
    {
        "comment": "<empty>",
        "description": "",
        "kind": "external",
        "longname": "external:class",
        "meta": {
            "code": {},
            "filename": "class.ts",
            "lineno": 1,
            "path": "./"
        },
        "name": "\"class\""
    },
    {
        "classdesc": "",
        "comment": "<empty>",
        "description": "A definition of a class\n\n\n\nClassDefinition constructor\n\n",
        "extends": [],
        "kind": "class",
        "longname": "external:class~ClassDefinition",
        "memberof": "external:class",
        "meta": {
            "code": {
                "paramnames": [
                    "simple",
                    "complex",
                    "args"
                ]
            },
            "filename": "class.ts",
            "lineno": 4,
            "path": "./"
        },
        "name": "ClassDefinition",
        "params": [
            {
                "description": "A parameter with a simple type\n\n",
                "name": "simple",
                "type": {
                    "names": [
                        "number"
                    ]
                }
            },
            {
                "description": "A parameter with a complex type\n\n",
                "name": "complex",
                "type": {
                    "names": [
                        "<TODO>"
                    ]
                }
            },
            {
                "description": "rest arguments\n\n\n",
                "name": "args",
                "type": {
                    "names": [
                        "any[]"
                    ]
                }
            }
        ],
        "returns": []
    },
    {
        "comment": "<empty>",
        "description": "Read/write property/variable\n\n",
        "kind": "member",
        "longname": "external:class~ClassDefinition#property",
        "memberof": "external:class~ClassDefinition",
        "meta": {
            "code": {},
            "filename": "class.ts",
            "lineno": 43,
            "path": "./"
        },
        "name": "property",
        "type": {
            "names": [
                "any"
            ]
        }
    },
    {
        "comment": "<empty>",
        "description": "Read-only  or getter property\n\n",
        "kind": "member",
        "longname": "external:class~ClassDefinition#property2",
        "memberof": "external:class~ClassDefinition",
        "meta": {
            "code": {},
            "filename": "class.ts",
            "lineno": 46,
            "path": "./"
        },
        "name": "property2",
        "type": {
            "names": [
                "any"
            ]
        }
    },
    {
        "comment": "<empty>",
        "description": "Property getter\n\n",
        "kind": "member",
        "longname": "external:class~ClassDefinition#property3",
        "memberof": "external:class~ClassDefinition",
        "meta": {
            "code": {},
            "filename": "class.ts",
            "lineno": 52,
            "path": "./"
        },
        "name": "property3",
        "type": {
            "names": [
                "any"
            ]
        }
    },
    {
        "comment": "<empty>",
        "description": "Property setter\n\n",
        "kind": "member",
        "longname": "external:class~ClassDefinition#property4",
        "memberof": "external:class~ClassDefinition",
        "meta": {
            "code": {},
            "filename": "class.ts",
            "lineno": 60,
            "path": "./"
        },
        "name": "property4",
        "type": {
            "names": [
                "any"
            ]
        }
    },
    {
        "comment": "<empty>",
        "description": "This is a method without return type\n\n",
        "kind": "function",
        "longname": "external:class~ClassDefinition.method1",
        "memberof": "external:class~ClassDefinition",
        "meta": {
            "code": {
                "paramnames": [
                    "simple",
                    "complex",
                    "args"
                ]
            },
            "filename": "class.ts",
            "lineno": 20,
            "path": "./"
        },
        "name": "method1",
        "params": [
            {
                "description": "\n\nA parameter with a simple type",
                "name": "simple",
                "type": {
                    "names": [
                        "number"
                    ]
                }
            },
            {
                "description": "\n\nA parameter with a complex type",
                "name": "complex",
                "type": {
                    "names": [
                        "<TODO>"
                    ]
                }
            },
            {
                "description": "\n\nrest arguments\n",
                "name": "args",
                "type": {
                    "names": [
                        "any[]"
                    ]
                }
            }
        ],
        "returns": []
    },
    {
        "comment": "<empty>",
        "description": "This is a method with a simple return type\n\n",
        "kind": "function",
        "longname": "external:class~ClassDefinition.method2",
        "memberof": "external:class~ClassDefinition",
        "meta": {
            "code": {
                "paramnames": [
                    "simple",
                    "complex",
                    "args"
                ]
            },
            "filename": "class.ts",
            "lineno": 30,
            "path": "./"
        },
        "name": "method2",
        "params": [
            {
                "description": "\n\nA parameter with a simple type",
                "name": "simple",
                "type": {
                    "names": [
                        "number"
                    ]
                }
            },
            {
                "description": "\n\nA parameter with a complex type",
                "name": "complex",
                "type": {
                    "names": [
                        "<TODO>"
                    ]
                }
            },
            {
                "description": "\n\nrest arguments",
                "name": "args",
                "type": {
                    "names": [
                        "any[]"
                    ]
                }
            }
        ],
        "returns": [
            {
                "description": "42\n",
                "name": "method2",
                "type": {
                    "names": [
                        "number"
                    ]
                }
            }
        ]
    },
    {
        "comment": "<empty>",
        "description": "This is a method with a union type\n\n",
        "kind": "function",
        "longname": "external:class~ClassDefinition.method3",
        "memberof": "external:class~ClassDefinition",
        "meta": {
            "code": {
                "paramnames": [
                    "union"
                ]
            },
            "filename": "class.ts",
            "lineno": 38,
            "path": "./"
        },
        "name": "method3",
        "params": [
            {
                "description": "\n\nA parameter with a union type",
                "name": "union",
                "type": {
                    "names": [
                        "number|string|any"
                    ]
                }
            }
        ],
        "returns": [
            {
                "description": "union\n",
                "name": "method3",
                "type": {
                    "names": [
                        "number|string|any"
                    ]
                }
            }
        ]
    }
]